from util import if_else
import random
import numpy as np
import mpc_math
import math

program.bit_length = 64


count = MemValue(0)
intermediate_size = MemValue(sint(0))
noise_count = MemValue(sint(0))
distinct_count = MemValue(sint(0))


temp = MemValue(sint(0))



def distinct(t_input_sorted,tsize):
    disMatrix = Matrix(tsize,2,sint)
    resultarray = Array(tsize,sint)

    resultarray[0] = sint(1).bit_and(disMatrix[0][1])

    @for_range_opt(tsize-1)
    def _(i):
        eqb = t_input_sorted[i][0] == t_input_sorted[i+1][0]
        disbit = (eqb == 1).if_else(sint(0),sint(1))
        resultarray[i+1] = disbit.bit_and(disMatrix[i+1][1])


    return resultarray




n = 1000
print_ln("n is:%s",n)
t1 = Array(n,sint)
t2 = Array(n,sint)


diagnose = Matrix(n,4,sint)
medication = Matrix(n,4,sint)

@for_range_opt(n)
def _(i):
    #diagnose[i][0]= sint.get_input_from(0)
    #t1[i] = diagnose[i][0]
    t1[i] = sint.get_input_from(0)

@for_range_opt(n)
def _(i):
    #medication[i][0] = sint.get_input_from(1)
    #t2[i] = medication[i][0]
    t2[i] = sint.get_input_from(1)

t_input_sorted = Matrix(n,2,sint)

@for_range_opt(n)
def _(i):
    t_input_sorted[i][0] = t1[i]
    t_input_sorted[i][1] = sint(1) 
    
start_timer(111)
t_input_sorted.sort()
r = distinct(t_input_sorted,n)
stop_timer(111)


@for_range_opt(10)
def _(i):
    print_ln("distinct r[%s] is:%s",i,r[i].reveal())